name: "Install deps, then build"
description: "Install npm dependencies, then build the project"

inputs:
  environment:
    description: "Determines what environement variables to set.  Expecting: 'staging' | 'prod'"
    required: true
    # Note: These 'type' and 'options' parameters don't seem to work in this context (I think they may only work for workflow_dispatch triggers)
    type: choice
    options:
    - staging
    - prod


runs:
  using: "composite"
  steps:
    - name: Validate inputs      
      if: ${{ inputs.environment != 'staging'  &&  inputs.environment != 'prod'}} # Inspiration: https://stackoverflow.com/a/70281911/718325
      run: echo "'Required input 'environment' must be set to either 'staging' or 'prod'. You passed '${{ inputs.environment }}'"; exit 1;
      shell: bash
    
    - name: Install dependencies
      # working-directory: ./frontend
      run: npm ci
      shell: bash

    - name: Build app (Staging environment)
      if: ${{ inputs.environment == 'staging' }}
      run: npm run build
      shell: bash
      env:
        NEXT_PUBLIC__FIREBASE_CONFIG__API_KEY:             ${{ secrets.STAGING__NEXT_PUBLIC__FIREBASE_CONFIG__API_KEY }}
        NEXT_PUBLIC__FIREBASE_CONFIG__AUTH_DOMAIN:         ${{ secrets.STAGING__NEXT_PUBLIC__FIREBASE_CONFIG__AUTH_DOMAIN }}
        NEXT_PUBLIC__FIREBASE_CONFIG__PROJECT_ID:          ${{ secrets.STAGING__NEXT_PUBLIC__FIREBASE_CONFIG__PROJECT_ID }}
        NEXT_PUBLIC__FIREBASE_CONFIG__STORAGE_BUCKET:      ${{ secrets.STAGING__NEXT_PUBLIC__FIREBASE_CONFIG__STORAGE_BUCKET }}
        NEXT_PUBLIC__FIREBASE_CONFIG__MESSAGING_SENDER_ID: ${{ secrets.STAGING__NEXT_PUBLIC__FIREBASE_CONFIG__MESSAGING_SENDER_ID }}
        NEXT_PUBLIC__FIREBASE_CONFIG__APP_ID:              ${{ secrets.STAGING__NEXT_PUBLIC__FIREBASE_CONFIG__APP_ID }}
        NEXT_PUBLIC__FIREBASE_CONFIG__MEASUREMENT_ID:      ${{ secrets.STAGING__NEXT_PUBLIC__FIREBASE_CONFIG__MEASUREMENT_ID }}
      # run: echo 'staging environment'
      # working-directory: ./frontend


    - name: Build app (Production environment)
      if: ${{ inputs.environment == 'prod' }}
      run: npm run build
      shell: bash
      env:
        NEXT_PUBLIC__FIREBASE_CONFIG__API_KEY:             ${{ secrets.NEXT_PUBLIC__FIREBASE_CONFIG__API_KEY }}
        NEXT_PUBLIC__FIREBASE_CONFIG__AUTH_DOMAIN:         ${{ secrets.NEXT_PUBLIC__FIREBASE_CONFIG__AUTH_DOMAIN }}
        NEXT_PUBLIC__FIREBASE_CONFIG__PROJECT_ID:          ${{ secrets.NEXT_PUBLIC__FIREBASE_CONFIG__PROJECT_ID }}
        NEXT_PUBLIC__FIREBASE_CONFIG__STORAGE_BUCKET:      ${{ secrets.NEXT_PUBLIC__FIREBASE_CONFIG__STORAGE_BUCKET }}
        NEXT_PUBLIC__FIREBASE_CONFIG__MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC__FIREBASE_CONFIG__MESSAGING_SENDER_ID }}
        NEXT_PUBLIC__FIREBASE_CONFIG__APP_ID:              ${{ secrets.NEXT_PUBLIC__FIREBASE_CONFIG__APP_ID }}
        NEXT_PUBLIC__FIREBASE_CONFIG__MEASUREMENT_ID:      ${{ secrets.NEXT_PUBLIC__FIREBASE_CONFIG__MEASUREMENT_ID }}
      # run: echo 'production environment'
      # working-directory: ./frontend


